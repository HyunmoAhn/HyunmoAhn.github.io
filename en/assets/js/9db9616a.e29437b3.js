"use strict";(self.webpackChunkhyunmoahn_github_io=self.webpackChunkhyunmoahn_github_io||[]).push([[7285],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),h=r,d=c["".concat(p,".").concat(h)]||c[h]||m[h]||i;return n?a.createElement(d,o(o({ref:t},u),{},{components:n})):a.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(3117),r=(n(7294),n(3905));const i={slug:"i18n-and-typescript",title:"i18n and typescript",description:"i18n and typescript",keywords:["i18n","typescript","web","Template Literal Types"],authors:"HyunmoAhn",tags:["i18n","typescript","template literal type"]},o=void 0,l={permalink:"/en/i18n-and-typescript",source:"@site/i18n/en/docusaurus-plugin-content-blog/2022-09-04-i18n-and-typescript.mdx",title:"i18n and typescript",description:"i18n and typescript",date:"2022-09-04T00:00:00.000Z",formattedDate:"September 4, 2022",tags:[{label:"i18n",permalink:"/en/tags/i-18-n"},{label:"typescript",permalink:"/en/tags/typescript"},{label:"template literal type",permalink:"/en/tags/template-literal-type"}],readingTime:28.305,hasTruncateMarker:!0,authors:[{name:"Hyunmo Ahn",title:"Front End Engineer @ Line+",url:"https://github.com/HyunmoAhn",imageURL:"https://github.com/HyunmoAhn.png",key:"HyunmoAhn"}],frontMatter:{slug:"i18n-and-typescript",title:"i18n and typescript",description:"i18n and typescript",keywords:["i18n","typescript","web","Template Literal Types"],authors:"HyunmoAhn",tags:["i18n","typescript","template literal type"]},prevItem:{title:"How to Avoid Re-rendering Caused by Callback Function Props",permalink:"/en/avoid-re-render-by-function-props"},nextItem:{title:"How to use OAS generator in Front-end environment?",permalink:"/en/how-to-use-oas-generator"}},p={authorsImageUrls:[void 0]},s=[{value:"Intro",id:"intro",level:2},{value:"About I18n",id:"about-i18n",level:3},{value:"How about I18n return type",id:"how-about-i18n-return-type",level:3},{value:"What is matter?",id:"what-is-matter",level:3}],u={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"intro"},"Intro"),(0,r.kt)("p",null,"I am using typescript and ",(0,r.kt)("a",{parentName:"p",href:"https://www.i18next.com/"},"i18next")," for our project,\nI would like to summarize the experience of strongly applying the type check of the i18n JSON file."),(0,r.kt)("h3",{id:"about-i18n"},"About I18n"),(0,r.kt)("p",null,"First, the following is how i18n was being used."),(0,r.kt)("p",null,"i18n is used to display text in multiple languages on the same webpage, meaning to display it in a language with one key, multiple values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const i18nJSON = {\n  'simple-example': 'This is example text',\n  'values-example': 'I need to show {0} value',\n  'line-break-example': 'Hello. \\n I am FE developer'\n} as const\n")),(0,r.kt)("p",null,"First, there is an object in the form of Key-Value as above. The object may be a JSON or an object of a typescript."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import tFunction from 'utils';\n\ntFunction('simple-example') // This is example text\ntFunction('values-example', [15]) // I need to show 15 value\ntFunction('line-break-example') // Hello <br /> I am FE developer\n")),(0,r.kt)("p",null,"Second, ",(0,r.kt)("inlineCode",{parentName:"p"},"tFunction")," is used to insert the i18n key to obtain a string that fits the key.\nIn some cases, the string including the value that fits each text may be returned by inserting a variable such as ",(0,r.kt)("inlineCode",{parentName:"p"},"values-example"),"."),(0,r.kt)("p",null,"In the last ",(0,r.kt)("inlineCode",{parentName:"p"},"line-break-example"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"\\n")," line break character is converted to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<br/>")," tag so that it can be line break on React."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This article uses a function called ",(0,r.kt)("inlineCode",{parentName:"p"},"tFunction")," as a method for applying i18n.\nSince it mainly deals with content at the type level, not JS logic, it will not deal with what actually happens to internal logic.\nIt can be said that it plays the same role as a function such as ",(0,r.kt)("a",{parentName:"p",href:"https://www.i18next.com/overview/api#t"},"i18next.t"),".")),(0,r.kt)("h3",{id:"how-about-i18n-return-type"},"How about I18n return type"),(0,r.kt)("p",null,"Here, it may be seen what value the returned value in ",(0,r.kt)("inlineCode",{parentName:"p"},"tFunction")," is. Then, what is the type of each return value?"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"showLineNumbers",showLineNumbers:!0},"import tFunction from 'utils';\n\ntFunction('simple-example')\n// This is example text\n// string\ntFunction('values-example', [15])\n// I need to show 15 value\n// string\ntFunction('line-break-example')\n// Hello <br /> I am FE developer\n// ReactElement\n")),(0,r.kt)("p",null,"It may be considered that L3 and L6 are string types.\nHowever, in L9, ReactElement is returned because there is ",(0,r.kt)("inlineCode",{parentName:"p"},"\\n")," in the i18n text."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"To support the line break by returning the string without returning to ",(0,r.kt)("inlineCode",{parentName:"p"},"ReactElement"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml"},"dangerouslySetInnerHTML")," shall be used."),(0,r.kt)("p",{parentName:"admonition"},"However, since there are many limitations, return to ReactElement instead of string.")),(0,r.kt)("p",null,"If the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"values-example")," contains JSX such as atag instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"15"),", the return type of ",(0,r.kt)("inlineCode",{parentName:"p"},"values-example")," is also different."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import tFunction from 'utils';\n\ntFunction('values-example', [15]) \n// I need to show 15 value\n// string\n\ntFunction('values-example', [<a href=\"/about\">more</a>]) \n// I need to show <a href=\"/about\">more</a> value\n// ReactElement\n")),(0,r.kt)("p",null,"Even if the ",(0,r.kt)("inlineCode",{parentName:"p"},"values-example")," I18n key is used as above, the type must vary depending on what value comes to values.\nThis is because ",(0,r.kt)("inlineCode",{parentName:"p"},"a tag")," must also be returned to a component that is a ReactElement, not a string, as in ",(0,r.kt)("inlineCode",{parentName:"p"},"<br/>"),"."),(0,r.kt)("h3",{id:"what-is-matter"},"What is matter?"),(0,r.kt)("p",null,"It was found that the i18n Text type varies as string and ReactElement depending on the case.\nSo what is the problem?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"tFunction")," is that it does not intelligently infer types as mentioned above.")),(0,r.kt)("p",null,"What is the problem if the type is not properly inferred here?"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"<input \n  type='input' \n  placeholder={tFunction('line-break-example')} // type error  \n/>\n")),(0,r.kt)("p",null,"In many cases, typically when using HTML tags, attributes defined as strings may contain i18n values rather than strings.\nIn this case, ",(0,r.kt)("inlineCode",{parentName:"p"},"[object Object]")," is displayed in the placeholder instead of the xlt text."),(0,r.kt)("p",null,"Of course, it's obviously strange to have an a tag in the placeholder or a line change like \\n.\nHowever, there may be cases where the i18n key is incorrectly used, or there may be cases where the i18n text is incorrectly registered."),(0,r.kt)("p",null,"In other words, there are the above problems in that the type is not properly inferred when using typescript, and it can cause another problem."),(0,r.kt)("p",null,"In this article, we will talk about how to define the type by format of i18n text.\nThis article is basically related to typescript ",(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-1.html"},"Template Literal Types"),", although i18n is an example."),(0,r.kt)("admonition",{title:"PRE-REQUIRED",type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"General knowledge of ",(0,r.kt)("inlineCode",{parentName:"li"},"typescript 4.1+")),(0,r.kt)("li",{parentName:"ul"},"Interest in ",(0,r.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-1.html"},"Template Literal Types")),(0,r.kt)("li",{parentName:"ul"},"The experience of ",(0,r.kt)("inlineCode",{parentName:"li"},"i18n system"),"(optional)"))))}m.isMDXComponent=!0}}]);